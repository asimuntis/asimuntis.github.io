<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Exploitation on </title>
    <link>https://asimuntis.github.io/categories/exploitation/</link>
    <description>Recent content in Exploitation on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 29 Oct 2019 20:38:02 +0000</lastBuildDate>
    
	<atom:link href="https://asimuntis.github.io/categories/exploitation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hack.Lu CTF 2019: Baby kernel 2</title>
      <link>https://asimuntis.github.io/post/hack-lu-ctf-2019-baby-kernel-2/</link>
      <pubDate>Tue, 29 Oct 2019 20:38:02 +0000</pubDate>
      
      <guid>https://asimuntis.github.io/post/hack-lu-ctf-2019-baby-kernel-2/</guid>
      <description>Baby Kernel 2 - pwn , 202 pts, solves: 68 
This post is a follow up to a quick writeup that I&amp;rsquo;ve posted on my github.
We are provided with a minimal kernel environment containing custom kernel module and client that communicates with it.
Having read/write primitive in kernel space we can escalate our privileges by changing cred field of the task_struct of our current task. Provided System.map file contains all symbols from the target kernel:</description>
    </item>
    
  </channel>
</rss>